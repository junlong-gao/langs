/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradle.java;

import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    /*
     * Example of lambda and comparable
     */
    public static void sortStringsWithLambda(List<String> inputStrs) {
        Collections.sort(inputStrs, 
            (s1, s2) -> Integer.compare(s1.length(), s2.length())
        );
    }

    /*
     * Demo usage of java optional
     */
    class Person {
        private Optional<Car> car;
        public Optional<Car> getCar() {
            return car;
        }
    }

    class Car {
        private Optional<Insurance> insurance;
        public Optional<Insurance> getInsurance() {
            return insurance;
        }
    }

    class Insurance {
        private String name;
        public String getName() {
            return name;
        }
    }

    public static void optionalExample(Person person) {
        Optional<Person> optPerson = Optional.of(person);

        /*
         * Optional<T> :: map(f)  = Optional(T.f() or empty)
         * Optional<T> :: flatMap(f) = Optional(unwrap(T).f() or empty)
         *      Optional(Optional.empty) = Optional.empty
         */
        Optional<String> i = optPerson.flatMap(Person::getCar)
                                   .flatMap(Car::getInsurance)
                                   .map(Insurance::getName);
    }
}


